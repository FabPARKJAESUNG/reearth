name: Nightly
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'
env:
  IMAGE: reearth/reearth
  IMAGE_BASE: reearth/reearth-backend
  TAG: nightly
jobs:
  prenightly:
    runs-on: ubuntu-latest
    env:
      EV: ${{ toJSON(github.event) }}
    steps:
      - run: echo ${{ github.event.repository.full_name }}
      - run: echo $EV
  nightly:
    name: Nightly
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Fetch reearth-web release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: reearth/reearth-web
          version: tags/nightly
          file: reearth-web_nightly.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract reearth-web
        run: tar -xvf reearth-web_nightly.tar.gz && mv reearth-web web
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: REEARTH_BACKEND_IMAGE=${{ env.IMAGE_BASE }}:${{ env.TAG }}
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  slack-notification:
    if: github.event.repository.full_name == 'reearth/reearth' && always()
    name: Slack Notification
    needs:
      - nightly
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: Gamesight/slack-workflow-status@master
        if: always()
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
